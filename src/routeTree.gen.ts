/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectslayoutImport } from './routes/projects/__layout'
import { Route as ProjectslayoutIndexImport } from './routes/projects/__layout/index'
import { Route as ProjectslayoutBrandActivationImport } from './routes/projects/__layout/brand-activation'

// Create Virtual Routes

const ProjectsImport = createFileRoute('/projects')()

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectslayoutRoute = ProjectslayoutImport.update({
  id: '/__layout',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectslayoutIndexRoute = ProjectslayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectslayoutRoute,
} as any)

const ProjectslayoutBrandActivationRoute =
  ProjectslayoutBrandActivationImport.update({
    id: '/brand-activation',
    path: '/brand-activation',
    getParentRoute: () => ProjectslayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/projects/__layout': {
      id: '/projects/__layout'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectslayoutImport
      parentRoute: typeof ProjectsRoute
    }
    '/projects/__layout/brand-activation': {
      id: '/projects/__layout/brand-activation'
      path: '/brand-activation'
      fullPath: '/projects/brand-activation'
      preLoaderRoute: typeof ProjectslayoutBrandActivationImport
      parentRoute: typeof ProjectslayoutImport
    }
    '/projects/__layout/': {
      id: '/projects/__layout/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProjectslayoutIndexImport
      parentRoute: typeof ProjectslayoutImport
    }
  }
}

// Create and export the route tree

interface ProjectslayoutRouteChildren {
  ProjectslayoutBrandActivationRoute: typeof ProjectslayoutBrandActivationRoute
  ProjectslayoutIndexRoute: typeof ProjectslayoutIndexRoute
}

const ProjectslayoutRouteChildren: ProjectslayoutRouteChildren = {
  ProjectslayoutBrandActivationRoute: ProjectslayoutBrandActivationRoute,
  ProjectslayoutIndexRoute: ProjectslayoutIndexRoute,
}

const ProjectslayoutRouteWithChildren = ProjectslayoutRoute._addFileChildren(
  ProjectslayoutRouteChildren,
)

interface ProjectsRouteChildren {
  ProjectslayoutRoute: typeof ProjectslayoutRouteWithChildren
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectslayoutRoute: ProjectslayoutRouteWithChildren,
}

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectslayoutRouteWithChildren
  '/projects/brand-activation': typeof ProjectslayoutBrandActivationRoute
  '/projects/': typeof ProjectslayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectslayoutIndexRoute
  '/projects/brand-activation': typeof ProjectslayoutBrandActivationRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/projects/__layout': typeof ProjectslayoutRouteWithChildren
  '/projects/__layout/brand-activation': typeof ProjectslayoutBrandActivationRoute
  '/projects/__layout/': typeof ProjectslayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/projects'
    | '/projects/brand-activation'
    | '/projects/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/projects' | '/projects/brand-activation'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/projects'
    | '/projects/__layout'
    | '/projects/__layout/brand-activation'
    | '/projects/__layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProjectsRoute: typeof ProjectsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProjectsRoute: ProjectsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/projects"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/projects": {
      "filePath": "projects",
      "children": [
        "/projects/__layout"
      ]
    },
    "/projects/__layout": {
      "filePath": "projects/__layout.tsx",
      "parent": "/projects",
      "children": [
        "/projects/__layout/brand-activation",
        "/projects/__layout/"
      ]
    },
    "/projects/__layout/brand-activation": {
      "filePath": "projects/__layout/brand-activation.tsx",
      "parent": "/projects/__layout"
    },
    "/projects/__layout/": {
      "filePath": "projects/__layout/index.tsx",
      "parent": "/projects/__layout"
    }
  }
}
ROUTE_MANIFEST_END */
